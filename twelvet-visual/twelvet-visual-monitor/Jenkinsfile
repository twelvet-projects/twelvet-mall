pipeline {
  agent any

  tools {
    maven 'maven'
  }

  stages {
    stage('building twelvet pro') {
      when {
        beforeAgent true
        branch 'master'
      }
      steps {
        sh 'mvn clean install -P product'
      }
    }

    stage('archiveArtifacts twelvet-visual-monitor') {
      steps {
        dir('twelvet-visual') {
          archiveArtifacts artifacts: '**/twelvet-visual-monitor/target/*.jar', fingerprint: true
        }
      }
    }
  }
}

node {
  if (env.BRANCH_NAME.contains('master')) {
    def remote = [:]
    remote.name = 'twelvet'
    remote.host = env.REMOTE_HOST
    withCredentials([usernamePassword(credentialsId: 'twelvet', passwordVariable: 'password', usernameVariable: 'userName')]) {
      remote.user = userName
      remote.password = password
      remote.allowAnyHosts = true
      stage('push to twelvet') {
        sshPut remote: remote, from: 'twelvet-server/twelvet-visual-monitor/target/twelvet-visual-monitor.jar', into: '/twelvet/docker/twelvet/visual/monitor/jar/'
        sshCommand remote: remote, command: 'docker-compose -f /twelvet/docker/docker-compose.yml restart twelvet-visual-monitor'
      }
    }
  }
}
